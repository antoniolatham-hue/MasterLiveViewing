name: CI & Deploy (Vercel)

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Vercel CLI
        run: npm install --global vercel

      # --- sanity check so we fail with a clear message if a secret is missing
      - name: Check required secrets
        run: |
          test -n "${VERCEL_TOKEN}" || (echo "VERCEL_TOKEN is missing" && exit 1)
          test -n "${VERCEL_ORG_ID}" || (echo "VERCEL_ORG_ID is missing" && exit 1)
          test -n "${VERCEL_PROJECT_ID}" || (echo "VERCEL_PROJECT_ID is missing" && exit 1)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      # --- this writes .vercel/project.json for the correct project/org
      - name: Vercel pull (link project)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel pull --yes --environment=production --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"

      - name: Vercel build
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel build --prod --token "$VERCEL_TOKEN"

      - name: Deploy to Vercel (production)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"
