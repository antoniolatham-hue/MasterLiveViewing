name: Global Push & Deploy

on:
  # Run when you push to this repo (your "hub")
  push:
    branches: [ main, master ]
  # Run manually from the Actions tab
  workflow_dispatch:
    inputs:
      owner:
        description: 'GitHub owner/org (defaults to env OWNER)'
        required: false
      include_archived:
        description: 'Also process archived repos? (false/true)'
        required: false
        default: 'false'
  # (Optional) uncomment to auto-run hourly
  # schedule:
  #   - cron: "0 * * * *"

# Needed so we can push to other repos from this workflow
permissions:
  contents: write

env:
  # 🔁 CHANGE THIS to your GitHub username or org
  OWNER: "AntonioLatham"

jobs:
  push_all:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    concurrency:
      group: global-push-${{ github.ref }}
      cancel-in-progress: false

    steps:
      - name: Checkout hub repo (not strictly required)
        uses: actions/checkout@v4

      - name: Set up git & tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh
          git config --global user.name  "actions-bot"
          git config --global user.email "actions@users.noreply.github.com"

      - name: Authenticate GH CLI
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "${GH_TOKEN}" | gh auth login --with-token

      - name: Build repo list
        env:
          OWNER: ${{ github.event.inputs.owner != '' && github.event.inputs.owner || env.OWNER }}
        run: |
          mkdir -p work && cd work
          gh repo list "$OWNER" --limit 500 --json name,isArchived \
            --jq '.[] | select(.isArchived==false) | .name' > repos.txt
          echo "Found $(wc -l < repos.txt) repos"

      - name: Clone, commit if needed, push all
        env:
          OWNER: ${{ github.event.inputs.owner != '' && github.event.inputs.owner || env.OWNER }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          set -e
          cd work
          while read -r NAME; do
            [ -z "$NAME" ] && continue
            echo "=============================="
            echo "➡️  Processing $NAME"
            URL="https://x-access-token:${GH_TOKEN}@github.com/${OWNER}/${NAME}.git"

            if [ ! -d "$NAME/.git" ]; then
              echo "📥 Cloning $NAME"
              git clone --quiet "$URL" "$NAME" || { echo "⚠️ clone failed $NAME"; continue; }
            fi

            pushd "$NAME" >/dev/null

            # Pick a branch to work on
            BRANCH="$(git symbolic-ref --short HEAD 2>/dev/null || echo main)"
            git fetch origin "$BRANCH" --quiet || true
            git checkout "$BRANCH" 2>/dev/null || git checkout -b "$BRANCH"
            git pull --rebase origin "$BRANCH" --quiet || true

            # If there are local uncommitted changes in the runner
            if [ -n "$(git status --porcelain)" ]; then
              git add -A
              git commit -m "chore: auto-sync via hub"
              echo "📝 Committed changes in $NAME"
            else
              echo "ℹ️  No local changes to commit in $NAME"
            fi

            # Push either way (this also triggers each repo's CI/deploy)
            git push origin "$BRANCH" --quiet || echo "❌ Push failed for $NAME"
            popd >/dev/null
          done < repos.txt

          echo "✅ All repos processed. Their own Actions/Pages should deploy as configured."
