name: Sync SkyLink360 â†’ liveMonitor.json

on:
  workflow_dispatch: {}
  schedule:
    - cron: "*/15 * * * *" # every 15 minutes

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout MasterLiveViewing
        uses: actions/checkout@v4

      - name: Ensure jq is available
        run: |
          if ! command -v jq >/dev/null; then
            sudo apt-get update -y
            sudo apt-get install -y jq
          fi

      - name: Get latest commit from SkyLink360
        id: get
        env:
          OWNER: antoniolatham-hue
          REPO: SkyLink360
        run: |
          curl -s https://api.github.com/repos/$OWNER/$REPO/commits > /tmp/commits.json
          SHA=$(jq -r '.[0].sha' /tmp/commits.json)
          MSG=$(jq -r '.[0].commit.message' /tmp/commits.json)
          DATE=$(jq -r '.[0].commit.author.date' /tmp/commits.json)
          URL="https://github.com/$OWNER/$REPO/commit/$SHA"
          echo "sha=$SHA" >> $GITHUB_OUTPUT
          echo "msg=$MSG" >> $GITHUB_OUTPUT
          echo "date=$DATE" >> $GITHUB_OUTPUT
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Save data to liveMonitor.json
        run: |
          mkdir -p data
          jq -n \
            --arg sha "${{ steps.get.outputs.sha }}" \
            --arg msg "${{ steps.get.outputs.msg }}" \
            --arg date "${{ steps.get.outputs.date }}" \
            --arg url "${{ steps.get.outputs.url }}" \
            '{sha: $sha, message: $msg, date: $date, url: $url}' > data/liveMonitor.json

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add data/liveMonitor.json
          git commit -m "Update liveMonitor.json [skip ci]" || exit 0
          git push
